#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
#
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.
#
# Modified to make a template file for a multi-binary package with separated
# build-arch and build-indep targets  by Bill Allombert 2001
b=$(shell pwd)/debian

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

include /usr/share/dpatch/dpatch.make

CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

#CONFIGURE = ./configure  --prefix=/usr
#	--host=$(DEB_HOST_GNU_TYPE) \
#	--build=$(DEB_BUILD_GNU_TYPE) \
#	--mandir=\$${prefix}/share/man \
#	--infodir=\$${prefix}/share/info \
#	CFLAGS="$(CFLAGS)" LDFLAGS="-Wl,-z,defs"

CONFIGURE = ./configure
CONFIG_MYSQL = CPPFLAGS=`mysql_config --include` $(CONFIGURE) \
	--enable-mysql --disable-pgsql
#CONFIG_PGSQL = CPPFLAGS="-I`pg_config --includedir`" $(CONFIGURE) \
#	--enable-pgsql --disable-mysql --with-pgsql-lib=`pg_config --libdir` --with-pgsql-inc=`pg_config --includedir`

clean: unpatch
	dh_testdir -a
	dh_testroot -a
	-rm -f \
		build-ndoutils-mysql-stamp \
		build-ndoutils-pgsql-stamp \
		config-ndoutils-mysql-stamp \
		config-ndoutils-pgsql-stamp
	[ ! -f Makefile ] || $(MAKE) distclean
	rm -f config.guess config.log config.sub
	rm -f \
		src/*-mysql src/*-mysql-2x* src/*-mysql-3x* \
		src/*-pgsql src/*-pgsql-2x* src/*-pgsql-3x*
	rm -f \
		debian/ndoutils-nagios3-mysql.dirs \
		debian/ndoutils-nagios3-mysql.docs \
		debian/ndoutils-nagios3-mysql.manpages \
		debian/ndoutils-nagios3-mysql.ndoutils.default \
		debian/ndoutils-nagios3-mysql.ndoutils.init \
		debian/ndoutils-nagios3-mysql.config \
		debian/ndoutils-nagios3-mysql.preinst \
		debian/ndoutils-nagios3-mysql.prerm \
		debian/ndoutils-nagios3-mysql.postinst \
		debian/ndoutils-nagios3-mysql.postrm \
		debian/ndoutils-nagios3-mysql.README.Debian \
		debian/ndoutils-nagios3-pgsql.dirs \
		debian/ndoutils-nagios3-pgsql.manpages \
		debian/ndoutils-nagios3-pgsql.ndoutils.default \
		debian/ndoutils-nagios3-pgsql.ndoutils.init \
		debian/ndoutils-nagios3-pgsql.config \
		debian/ndoutils-nagios3-pgsql.preinst \
		debian/ndoutils-nagios3-pgsql.prerm \
		debian/ndoutils-nagios3-pgsql.postinst \
		debian/ndoutils-nagios3-pgsql.postrm \
		debian/ndoutils-nagios3-pgsql.README.Debian
	
	rm -f debian/doc/NDOUTILS\ DB\ Model.odt \
		debian/doc/NDOUtils\ Documentation.sxw
	dh_clean

config-ndoutils-mysql: config-ndoutils-mysql-stamp 
config-ndoutils-mysql-stamp: patch
	dh_testdir -a
	@echo " ### Doing $@"
ifneq "$(wildcard /usr/share/misc/config.sub)" ""
	cp -f /usr/share/misc/config.sub config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
	cp -f /usr/share/misc/config.guess config.guess
endif
	$(CONFIG_MYSQL)
	touch $@

#config-ndoutils-pgsql: config-ndoutils-pgsql-stamp
#config-ndoutils-pgsql-stamp: patch
#	dh_testdir -a
#	@echo " ### Doing $@"
#	-make clean;
#	$(CONFIG_PGSQL)
#	touch $@

build-ndoutils-mysql: build-ndoutils-mysql-stamp
build-ndoutils-mysql-stamp: config-ndoutils-mysql-stamp
	dh_testdir -a
	@echo " ### Doing $@"
	$(MAKE) && \
		(cd src && \
			mv ndomod-2x.o ndomod-mysql-2x.o && \
			mv ndomod-3x.o ndomod-mysql-3x.o && \
			mv ndo2db-2x ndo2db-mysql-2x && \
			mv ndo2db-3x ndo2db-mysql-3x && \
			mv log2ndo log2ndo-mysql && \
			mv sockdebug sockdebug-mysql && \
			mv file2sock file2sock-mysql \
		);
	touch $@

#build-ndoutils-pgsql: build-ndoutils-pgsql-stamp
#build-ndoutils-pgsql-stamp: config-ndoutils-pgsql-stamp
#	dh_testdir -a
#	@echo " ### Doing $@"
#	$(MAKE) && \
#		(cd src && \
#			mv ndomod-2x.o ndomod-pgsql-2x.o && \
#			mv ndo2db-2x ndo2db-pgsql-2x && \
#			mv log2ndo log2ndo-pgsql && \
#			mv sockdebug sockdebug-pgsql && \
#			mv file2sock file2sock-pgsql \
#		);
#	touch $@

# TODO: ndoutils-pgsql
binary-arch: ndoutils-common ndoutils-mysql
	dh_testdir -a
	dh_testroot -a

binary-indep: ndoutils-doc

ndoutils-mysql: ndoutils-nagios3-mysql

ndoutils-nagios3-mysql: build-ndoutils-mysql
	@echo " ### Doing $@"
	for script in dirs docs config preinst postinst prerm postrm manpages ndoutils.default ndoutils.init README.Debian; do \
		test -e debian/ndoutils-NG-DB.$${script}.in && \
			sed "	s/@@NG@@/nagios3/g; \
				s/@@DB@@/mysql/g; \
				s/@@PACKAGE@@/$@/g; \
				s/@@PKG_SHORT@@/ndoutils-mysql/g; \
				s/@@DBPORT@@/3306/g; \
				s/@@NGV@@/3x/g" \
				< debian/ndoutils-NG-DB.$${script}.in > debian/$@.$${script}; \
	done
	dh_installdirs -p$@ -P$(b)/$@
	
	# install the binaries
	for bin in ndomod-mysql-3x.o ndo2db-mysql-3x; do \
		install -m 755 src/$$bin debian/$@/usr/lib/ndoutils/$$bin; \
	done
	
	# install the config templates
	for cfg in ndo2db.cfg ndomod.cfg; do \
		sed -e 's/^ *[^#]* *\(\<db_servertype\) *=.*$$/\1=_DBC_DBTYPE_/' \
	    	    -e 's/^ *[^#]* *\(\<db_host\) *=.*$$/\1=_DBC_DBSERVER_/' \
	    	    -e 's/^ *[^#]* *\(\<db_port\) *=.*$$/\1=_DBC_DBPORT_/' \
	    	    -e 's/^ *[^#]* *\(\<db_name\) *=.*$$/\1=_DBC_DBNAME_/' \
	    	    -e 's/^ *[^#]* *\(\<db_user\) *=.*$$/\1=_DBC_DBUSER_/' \
	    	    -e 's/^ *[^#]* *\(\<db_pass\) *=.*$$/\1=_DBC_DBPASS_/' \
	    	    -e 's/_NAGIOS_/nagios3/g' \
			< config/$$cfg \
			> debian/$@/usr/share/$@/tmpl/$$cfg; \
	done
	
	# install the SQL schemes
	install -m 644 db/mysql.sql \
		debian/$@/usr/share/dbconfig-common/data/ndoutils-mysql/install/mysql
	install -m 644 db/mysql-upgrade-1.3.sql \
		debian/$@/usr/share/dbconfig-common/data/ndoutils-mysql/upgrade/mysql/1.3
	install -m 644 db/mysql-upgrade-1.4b1.sql \
		debian/$@/usr/share/dbconfig-common/data/ndoutils-mysql/upgrade/mysql/1.4b1
	install -m 644 db/mysql-upgrade-1.4b2.sql \
		debian/$@/usr/share/dbconfig-common/data/ndoutils-mysql/upgrade/mysql/1.4b2
	install -m 644 db/mysql-upgrade-1.4b3.sql \
		debian/$@/usr/share/dbconfig-common/data/ndoutils-mysql/upgrade/mysql/1.4b3
	install -m 644 db/mysql-upgrade-1.4b4.sql \
		debian/$@/usr/share/dbconfig-common/data/ndoutils-mysql/upgrade/mysql/1.4b4
	install -m 644 db/mysql-mods-1.4b5.sql \
		debian/$@/usr/share/dbconfig-common/data/ndoutils-mysql/upgrade/mysql/1.4b5
	
	# use debhelper
	dh_installchangelogs -p$@ -P$(b)/$@
	dh_installdebconf -p$@ -P$(b)/$@
	dh_installdocs  -p$@ -P$(b)/$@ --all
	dh_installman   -p$@ -P$(b)/$@ --all
	dh_installinit  -p$@ -P$(b)/$@ --name=ndoutils
	dh_link         -p$@ -P$(b)/$@ \
		usr/lib/ndoutils/ndo2db-mysql-3x    usr/sbin/ndo2db
	dh_strip       -p$@ -P$(b)/$@
	dh_compress    -p$@ -P$(b)/$@
	dh_fixperms    -p$@ -P$(b)/$@
	dh_makeshlibs  -p$@ -P$(b)/$@ -V
	dh_installdeb  -p$@ -P$(b)/$@
	dh_shlibdeps   -p$@ -P$(b)/$@
	dh_gencontrol  -p$@ -P$(b)/$@
	dh_md5sums     -p$@ -P$(b)/$@
	dh_builddeb    -p$@ -P$(b)/$@

ndoutils-common: build-ndoutils-mysql
	@echo " ### Doing: $@"
	dh_installdirs -p$@ -P$(b)/$@
	
	install -m 755 src/sockdebug-mysql   debian/$@/usr/lib/ndoutils/sockdebug
	install -m 755 src/file2sock-mysql   debian/$@/usr/lib/ndoutils/file2sock
	install -m 755 src/log2ndo-mysql     debian/$@/usr/lib/ndoutils/log2ndo
	
	# use debhelper
	dh_installchangelogs -p$@ -P$(b)/$@
	dh_installdebconf -p$@ -P$(b)/$@
	dh_installdocs  -p$@ -P$(b)/$@ --all
	dh_installman   -p$@ -P$(b)/$@ --all
	dh_link         -p$@ -P$(b)/$@ \
		usr/lib/ndoutils/sockdebug usr/sbin/sockdebug \
		usr/lib/ndoutils/file2sock usr/sbin/file2sock \
		usr/lib/ndoutils/log2ndo   usr/sbin/log2ndo
	dh_strip       -p$@ -P$(b)/$@
	dh_compress    -p$@ -P$(b)/$@
	dh_fixperms    -p$@ -P$(b)/$@
	dh_makeshlibs  -p$@ -P$(b)/$@ -V
	dh_installdeb  -p$@ -P$(b)/$@
	dh_shlibdeps   -p$@ -P$(b)/$@
	dh_gencontrol  -p$@ -P$(b)/$@
	dh_md5sums     -p$@ -P$(b)/$@
	dh_builddeb    -p$@ -P$(b)/$@

#ndoutils-pgsql: build-ndoutils-pgsql
#	@echo " ### Doing $@"
#	dh_installdirs -p$@ -P$(b)/$@
#	# install the binaries
#	install -m 755 src/ndomod-pgsql-2x.o debian/$@/usr/lib/ndoutils/ndomod.o
#	install -m 755 src/ndo2db-pgsql-2x   debian/$@/usr/sbin/ndo2db
#	install -m 755 src/sockdebug-pgsql   debian/$@/usr/sbin/sockdebug
#	install -m 755 src/file2sock-pgsql   debian/$@/usr/sbin/file2sock
#	install -m 755 src/log2ndo-pgsql     debian/$@/usr/sbin/log2ndo
#	# install the config templates
#	install -m 644 config/ndomod.cfg debian/$@/usr/share/$@/tmpl
#	install -m 644 config/ndo2db.cfg debian/$@/usr/share/$@/tmpl
#	# there are NO SQL scheme to install
#	
#	# TODO: manpages!
#	#for binary in log2ndo ndo2db ndomod sockdebug file2sock; do \
#	#	ln -s /usr/share/man/man7/undocumented.7.gz debian/$${binary}.7.gz; \
#	#done
#	
#	sed "s/@@DB@@/pgsql/g; s/@@PACKAGE@@/$@/g; s/@@DBPORT@@/5432/g" < debian/ndoutils-DB.preinst.in  > debian/$@.preinst
#	sed "s/@@DB@@/pgsql/g; s/@@PACKAGE@@/$@/g; s/@@DBPORT@@/5432/g" < debian/ndoutils-DB.postinst.in > debian/$@.postinst
#	sed "s/@@DB@@/pgsql/g; s/@@PACKAGE@@/$@/g; s/@@DBPORT@@/5432/g" < debian/ndoutils-DB.prerm.in    > debian/$@.prerm
#	sed "s/@@DB@@/pgsql/g; s/@@PACKAGE@@/$@/g; s/@@DBPORT@@/5432/g" < debian/ndoutils-DB.postrm.in   > debian/$@.postrm
#	
#	# use debhelper
#	dh_installchangelogs -p$@ -P$(b)/$@
#	dh_installdebconf -p$@ -P$(b)/$@
#	dh_installdocs -p$@ -P$(b)/$@
#	dh_installinit -p$@ -P$(b)/$@ --name=ndoutils
#	#dh_installman  -p$@ -P$(b)/$@	# TODO: manpages!
#	dh_link        -p$@ -P$(b)/$@
#	dh_strip       -p$@ -P$(b)/$@
#	dh_compress    -p$@ -P$(b)/$@
#	dh_fixperms    -p$@ -P$(b)/$@
#	dh_makeshlibs  -p$@ -P$(b)/$@ -V
#	dh_installdeb  -p$@ -P$(b)/$@
#	dh_shlibdeps   -p$@ -P$(b)/$@
#	dh_gencontrol  -p$@ -P$(b)/$@
#	dh_md5sums     -p$@ -P$(b)/$@
#	dh_builddeb    -p$@ -P$(b)/$@

ndoutils-doc:
	@echo " ### Doing $@"
	dh_installdirs -p$@ -P$(b)/$@
	mkdir -p debian/$@/usr/share/doc/ndoutils-doc
	install -m 644 docs/*.pdf debian/$@/usr/share/doc/ndoutils-doc
	# use debhelper
	dh_installchangelogs -p$@ -P$(b)/$@ 
	dh_installdocs -p$@ -P$(b)/$@
	dh_compress    -p$@ -P$(b)/$@ -X.pdf
	dh_fixperms    -p$@ -P$(b)/$@
	dh_installdeb  -p$@ -P$(b)/$@
	dh_gencontrol  -p$@ -P$(b)/$@
	dh_md5sums     -p$@ -P$(b)/$@
	dh_builddeb    -p$@ -P$(b)/$@

# Must not depend on anything. This is to be called by
# binary-arch/binary-indep
# in another 'make' thread.
#binary-common:
#	dh_testdir
#	dh_testroot
#	dh_installchangelogs 
#	dh_installdocs
#	dh_installexamples
#	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate	
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_python
#	dh_installinit --name=ndoutils
#	dh_installcron
#	dh_installinfo
#	dh_installman
#	dh_link
#	dh_strip
#	dh_compress 
#	dh_fixperms
#	dh_perl
#	dh_makeshlibs
#	dh_installdeb
#	dh_shlibdeps
#	dh_gencontrol
#	dh_md5sums
#	dh_builddeb

binary: binary-arch binary-indep
.PHONY: build clean binary-indep binary-arch binary install install-indep install-arch
